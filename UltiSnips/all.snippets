snippet gitignore_tpl "gitignore template"
# Logs
logs
*.log
npm-debug.log*

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directory
node_modules

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# VSCODE 
.vscode

# JETBRAIN
.idea

dist
public/build

endsnippet

snippet dockerignore_tpl "dockerignore template"
build/
dist/
docker/
node_modules/
uploads/
public/media/*
endsnippet

snippet docker_compose_yml "docker-compose.yml"
version: "2"

services:

  web:
    image: ${1:node}
    container_name: ${2:web-server}
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - db
    links:
      - db
    environment:
      - FOO=bar

  db:
    image: ${3:mongo}
    container_name: ${4:web-db}
    restart: unless-stopped
    volumes:
      - /data/mongodb/db:/data/db
endsnippet  

snippet drone_yml_node "drone.yml for node"
pipeline:
  build:
    image: node
    commands:
      - echo 'start build'
      - npm i && npm run build
      - echo 'finished'
  test:
    image: node
    commands:
      - echo 'start test'
      - npm test
      - echo 'finished'
  sonar:
    image: halsn/sonar-scanner
    commands:
      - echo 'sonar-scanner start'
      - sonar-scanner
      - echo 'finished'
endsnippet

snippet sonar_project_properties_node "sonar-project.properties for node"
sonar.host.url=http://${1:localhost}:9000
sonar.projectKey=${2:demo:key}
sonar.projectName=${3:demo}
sonar.projectVersion=1.0
 
sonar.sources=${4:src}
sonar.sourceEncoding=UTF-8
# 排除某些特定文件和文件夹
sonar.exclusions=node_modules/**/*,**/*.min.js
sonar.language=js

sonar.javascript.lcov.reportPaths=coverage/lcov.info
endsnippet

snippet babelrc_tpl "babel rc template"
{
  "presets": [
    "@babel/preset-env",
    "@babel/preset-react",
  ],
  "plugins": []
}
endsnippet
